image: docker:latest

services:
  - docker:dind
variables:
  DOCKER_TLS_CERTDIR: ""

stages:
  - build-react
  - build
  - deploy

build-react:
  stage: build-react
  image: node
  variables:
    DEFAULT_COURSE_ID: 00000000-0000-0000-0000-000000000001
  script:
    - npm i
    - npm run build
  artifacts:
    expire_in: 1 week
    paths:
      - dist
      - node_modules
  only:
    - main
build:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY/binom.school/binom/pg:${CI_COMMIT_BRANCH} ./db
    - docker push $CI_REGISTRY/binom.school/binom/pg:${CI_COMMIT_BRANCH}
    - docker build -t $CI_REGISTRY/binom.school/binom/nginx:${CI_COMMIT_BRANCH} -f ./nginx/Dockerfile .
    - docker push $CI_REGISTRY/binom.school/binom/nginx:${CI_COMMIT_BRANCH}
    - docker build -t $CI_REGISTRY/binom.school/binom/golang:${CI_COMMIT_BRANCH} .
    - docker push $CI_REGISTRY/binom.school/binom/golang:${CI_COMMIT_BRANCH}
  only:
    - main

deploy:
  stage: deploy
  variables:
    DOCKER_HOST: tcp://31.172.66.187:2376
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "/certs"
  script:
    - mkdir -p $DOCKER_CERT_PATH
    - echo "$TLSCACERT" > $DOCKER_CERT_PATH/ca.pem
    - echo "$TLSCERT" > $DOCKER_CERT_PATH/cert.pem
    - echo "$TLSKEY" > $DOCKER_CERT_PATH/key.pem
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - env POSTGRES_PASSWORD="$POSTGRES_PASSWORD" JWT_SECRET="$JWT_SECRET" APP_PORT="$APP_PORT" GIT_COMMIT="$CI_COMMIT_SHA" TELEGRAM_BOT_TOKEN="$TELEGRAM_BOT_TOKEN" docker stack deploy -c stack.yml binom --with-registry-auth --prune
    - docker system prune -f
    - rm -rf $DOCKER_CERT_PATH
  environment:
    name: master
    url:  http://31.172.66.187
  only:
    - main

